plugins:
  # Name could be anything, this name is what appears on the beginning of operation
  # mappings.
  gcp_plugin:
    # Could be 'central_deployment_agent' or 'host_agent'.
    # If 'central_deployment_agent', this plugin will be executed on the
    # deployment dedicated agent, other wise it will be executed on the host agent.
    executor: central_deployment_agent

    # URL to archive containing the plugin or name of directory containing
    # the plugin if it is included in the the blueprint directory under the
    # "plugins" directory.
    source: https://github.com/szpotona/cloudify-gcp-plugin/archive/add_keypair.zip

node_types:
  cloudify.gcp.nodes.Instance:
    derived_from: cloudify.nodes.Compute
    properties:
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.plugin.tasks.create_instance
          inputs:
            gcp_config:
              default: { get_property: [SELF, gcp_config]}
            instance:
              default: {}
        delete:
          implementation: gcp_plugin.plugin.tasks.delete_instance
          inputs:
            gcp_config:
              default: { get_property: [SELF, gcp_config] }

  cloudify.gcp.nodes.Network:
    derived_from: cloudify.nodes.Network
    properties:
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.plugin.tasks.create_network
          inputs:
            gcp_config:
              default: { get_property: [SELF, gcp_config]}
            network:
              default: {}
        delete:
          implementation: gcp_plugin.plugin.tasks.delete_network
          inputs:
            gcp_config:
              default: { get_property: [SELF, gcp_config]}

  cloudify.gcp.nodes.FirewallRule:
    derived_from: cloudify.nodes.Root
    properties:
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.plugin.tasks.create_firewall_rule
          inputs:
            gcp_config:
              default: { get_property: [SELF, gcp_config]}
            firewall_rule:
              default: {}
        delete:
          implementation: gcp_plugin.plugin.tasks.delete_firewall_rule
          inputs:
            gcp_config:
              default: { get_property: [SELF, gcp_config]}
            firewall_rule:
              default: {}

  cloudify.gcp.nodes.SecurityGroup:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create: 
          implementation: gcp_plugin.plugin.tasks.create_security_group
          inputs: 
            gcp_config:
              default: { get_property: [SELF, gcp_config]}
            rules:
              description: >
                You need to pass in either source_tags list OR cidr_ip list,
                and then the following two: ip_protocol and port list OR target_tags list.
              default: []
        delete:          
          implementation: gcp_plugin.plugin.tasks.delete_firewall_rule
          inputs:
            gcp_config:
              default: { get_property: [SELF, gcp_config]}

  cloudify.gcp.nodes.KeyPair:
    derived_from: cloudify.nodes.Root
    properties:
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.plugin.tasks.create_keypair
          inputs:
            gcp_config:
              description: >
                A dictionary of values to pass to authenticate with the Google Cloud Platform API.
              default: {}
            user:
              default: ''
            private_key_path:
              default: ''
        delete:
          implementation: gcp_plugin.plugin.tasks.delete_keypair
          inputs:
            gcp_config:
              description: >
                A dictionary of values to pass to authenticate with the Google Cloud Platform API.
              default: {}
            user:
              default: ''
            private_key_path:
              default: ''

relationships:
  cloudify.gcp.relationships.connected_to:
    derived_from: cloudify.relationships.connected_to

  cloudify.gcp.relationships.contained_in:
    derived_from: cloudify.relationships.contained_in

  cloudify.gcp.relationships.agent_connected_to_security_group:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: gcp_plugin.plugin.tasks.add_instance_tag
          inputs:
            gcp_config:
              default: { get_property: [SOURCE, gcp_config] }
            instance: 
              default: { get_attribute: [SOURCE, gcp_name] }
            tag:
              default: AGENT
        unlink:
          implementation: gcp_plugin.plugin.tasks.remove_instance_tag
          inputs:
            gcp_config:
              default: { get_property: [SOURCE, gcp_config] }
            instance: 
              default: { get_attribute: [SOURCE, gcp_name] }
            tag:
              default: AGENT

  cloudify.gcp.relationships.manager_connected_to_security_group:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: gcp_plugin.plugin.tasks.add_instance_tag
          inputs:
            gcp_config:
              default: { get_property: [SOURCE, gcp_config] }
            instance: 
              default: { get_attribute: [SOURCE, gcp_name] }
            tag:
              default: MANAGER
        unlink:
          implementation: gcp_plugin.plugin.tasks.remove_instance_tag
          inputs:
            gcp_config:
              default: { get_property: [SOURCE, gcp_config] }
            instance: 
              default: { get_attribute: [SOURCE, gcp_name] }
            tag:
              default: MANAGER