plugins:
  # Name could be anything, this name is what appears on the beginning of operation
  # mappings.
  gcp_plugin:
    # Could be 'central_deployment_agent' or 'host_agent'.
    # If 'central_deployment_agent', this plugin will be executed on the
    # deployment dedicated agent, other wise it will be executed on the host agent.
    executor: central_deployment_agent

    # URL to archive containing the plugin or name of directory containing
    # the plugin if it is included in the the blueprint directory under the
    # "plugins" directory.
    source: https://github.com/szpotona/cloudify-gcp-plugin/archive/add_images.zip

node_types:
  cloudify.gcp.nodes.Instance:
    derived_from: cloudify.nodes.Compute
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists and use existing (true) 
          or if Cloudify should create new resource (false).
        type: boolean
        default: false
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the GCP API.
        default: {}
      image_id:
        description: >
          The ID of the image in your GCP account.
        type: string
        default: {}
      instance_type:
        description: >
          The instance's type. All available instance types can be found here: 
          https://cloud.google.com/compute/docs/machine-types
        type: string
        default: n1-standard-1
      instance_additional_settings:
        description: >
          Additional instance settings.
        default: {}
      name:
        description: >
          Optional instance name. By default it will be instance id.
        type: string
        default: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: gcp_plugin.gcp.compute.instance.create
          inputs:
            properties:
              default: { get_property: [SELF, instance_additional_settings]}
            instance_type:
              default: { get_property: [SELF, instance_type]}
            image_id:
              default: { get_property: [SELF, image_id]}
            name:
              default: { get_property: [SELF, name]}
        delete:
          implementation: gcp_plugin.gcp.compute.instance.delete

  cloudify.gcp.nodes.Volume:
    derived_from: cloudify.nodes.Volume
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      image:
        description: >
          The image of the Volume.
        default: ''
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
      name:
        description: >
          Optional disk name. By default it will be disk id.
        type: string
        default: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.gcp.compute.disk.create
          inputs:
            image:
              default: { get_property: [SELF, image] }
            name:
              default: { get_property: [SELF, name] }
        delete:
          implementation: gcp_plugin.gcp.compute.disk.delete

  cloudify.gcp.nodes.Network:
    derived_from: cloudify.nodes.Network
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.gcp.compute.network.create
          inputs:
            network:
              default: {}
        delete:
          implementation: gcp_plugin.gcp.compute.network.delete

  cloudify.gcp.nodes.FirewallRule:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.gcp.compute.firewall.create
          inputs:
            firewall_rule:
              default: {}
        delete:
          implementation: gcp_plugin.gcp.compute.firewall.delete

  cloudify.gcp.nodes.SecurityGroup:
    derived_from: cloudify.nodes.SecurityGroup
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      rules:
        description: >
          You need to pass in either source_tags list OR cidr_ip list,
          and then the following two: ip_protocol and port list OR target_tags list.
        default: []
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create: 
          implementation: gcp_plugin.gcp.compute.firewall.create_security_group
          inputs: 
            rules:
              default: { get_property: [SELF, rules] }
        delete:          
          implementation: gcp_plugin.gcp.compute.firewall.delete_security_group

  cloudify.gcp.nodes.KeyPair:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      private_key_path:
        description: >
          The path where the key should be saved on the machine. If this is a bootstrap
          process, this refers to the local computer. If this will run on the manager,
          this will be saved on the manager.
        type: string
        default: ''
      private_existing_key_path:
        description: >
          The path where the key should be saved on the machine. If this is a bootstrap
          process, this refers to the local computer. If this will run on the manager,
          this will be saved on the manager.
        type: string
        default: ''
      public_existing_key_path:
        description: >
          The path to read from existing public key.
        type: string
        default: ''
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the Google Cloud Platform API.
        default: {}
      user:
        type: string
        default: ''
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.gcp.compute.keypair.create
          inputs:
            user: 
              default: { get_property: [SELF, user] }
            private_key_path: 
              default: { get_property: [SELF, private_key_path] }
            private_existing_key_path: 
              default: { get_property: [SELF, private_existing_key_path] }
            public_existing_key_path: 
              default: { get_property: [SELF, public_existing_key_path] }
            external:
              default: { get_property: [SELF, use_external_resource] }
        delete:
          implementation: gcp_plugin.gcp.compute.keypair.delete
          inputs:
            user: 
              default: { get_property: [SELF, user] }
            private_key_path: 
              default: { get_property: [SELF, private_key_path] }

  cloudify.gcp.nodes.ExternalIP:
    derived_from: cloudify.nodes.VirtualIP
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the GCP API.
        default: {}

  cloudify.gcp.nodes.Image:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        description: >
          Indicate whether the resource exists or if Cloudify should create the resource.
        type: boolean
        default: false
      gcp_config:
        description: >
          A dictionary of values to pass to authenticate with the GCP API.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: gcp_plugin.gcp.compute.image.create
          inputs:
            gcp_config: 
              default: { get_property: [SELF, gcp_config] }
            image_name:
              default: ''
            image_path:
              default: ''
        delete:
          implementation: gcp_plugin.gcp.compute.image.delete
          inputs:
            gcp_config: 
              default: { get_property: [SELF, gcp_config] }

relationships:
  cloudify.gcp.relationships.instance_connected_to_security_group:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: gcp_plugin.gcp.compute.instance.add_instance_tag
          inputs:
            instance_name: 
              default: { get_attribute: [SOURCE, gcp_name] }
            tag:
              default: { get_attribute: [TARGET, targetTags] }
        unlink:
          implementation: gcp_plugin.gcp.compute.instance.remove_instance_tag
          inputs:
            instance_name: 
              default: { get_attribute: [SOURCE, gcp_name] }
            tag:
              default: { get_attribute: [TARGET, targetTags] }

  cloudify.gcp.relationships.instance_connected_to_ip:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: gcp_plugin.gcp.compute.instance.add_external_ip
          inputs:
            instance_name: 
              default: { get_attribute: [SOURCE, gcp_name] }
        unlink:
          implementation: gcp_plugin.gcp.compute.instance.remove_external_ip
          inputs:
            instance_name: 
              default: { get_attribute: [SOURCE, gcp_name] }

  cloudify.gcp.relationships.file_system_contained_in_compute:
    derived_from: cloudify.relationships.contained_in
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: gcp_plugin.gcp.compute.disk.add_boot_disk

  cloudify.gcp.relationships.instance_connected_to_disk:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish:
          implementation: gcp_plugin.gcp.compute.instance.attach_disk
          inputs:
            instance_name: 
              default: { get_attribute: [TARGET, gcp_name] }
            disk: 
              default: { get_attribute: [SOURCE, gcp_disk] }
        unlink:
          implementation: gcp_plugin.gcp.compute.instance.detach_disk
          inputs:
            instance_name: 
              default: { get_property: [TARGET, gcp_name] }
            disk_name: 
              default: { get_attribute: [SOURCE, gcp_name] }
